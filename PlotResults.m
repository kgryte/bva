function [DATA, handles] = PlotResults(DATA, WINDOW, handles)
% PLOTRESULTS
%   Plots the DATA results generated by Burst Variance Analysis into the 
%   axes supplied by HANDLES. Configuration and aesthetics of the axes is
%   currently controlled internally. NOTE: the BVA data is smoothed from a
%   discretized histogram presentation and transformed to a continuous
%   contour. The reference for this smoothing is " Garcia D, Robust 
%   smoothing of gridded data in one and higher dimensions with missing 
%   values. Computational Statistics & Data Analysis, 2010. "
%
%   INPUTS:
%       DATA: structure with the following data streams for each detected
%       burst: (NOTE: data streams are filtered according to input FILTERS)
%           DURATION: the temporal length of a detected burst [seconds]
%           LENGTH: the number of photons within a detected burst [photons]
%           DEXDEM: the number of photons detected in the donor channel
%               upon donor excitation.
%           DEXAEM: the number of photons detected in the acceptor channel
%               upon donor excitation. 
%           AEXAEM: the number of photons detected in the acceptor channel
%               upon acceptor excitation.
%           SUMPHOTONS: the number of photons detected in the donor &
%               acceptor channels upon donor excitation.
%           TOTALPHOTONS: the number of photons detected in the donor &
%               acceptor channels upon donor and acceptor excitation.
%               (excluding photons detected in donor channel upon acceptor
%               excitation: AexDem)
%           EFFICIENCY: the FRET efficiency.
%           STOICHIOMETRY: the relative fluorophore brightness.
%           RESULTS: an Nx2 array, where N is the number of bursts (after
%               filtering). The first column corresponds to the mean Efficiency
%               value for a burst and the second to the burst's Efficiency 
%               standard deviation. Array: E(efficiency) | sqrt(V(efficiency))
%           CLUSTERS: nested structure with the following fields:
%               CENTERS: vector containing the centers of the individual
%                  clusters.
%               STDEVDISTRMEAN: the Monte Carlo simulated standard
%                  deviation prediction.
%               STATISTICS: an Mx2 array, where M is the number of clusters
%                   ('slices' along the efficiency axis, into which bursts are
%                   grouped). The first column corresponds to the mean
%                   Efficiency value for the cluster, and the second to the
%                   standard deviation of the burst's within that cluster.
%           CONFIDENCEINTERVAL: nested structure with the following fields:
%               UPPER: the upper confidence bound generated from the Monte
%                  Carlo simulation and multiple hypothesis test.
%               LOWER: the lower confidence bound generated from the Monte
%                  Carlo simulation and the multiple hypothesis test.
%
%       WINDOW: size of the sliding window over which FRET will be
%       calculated. Default: 5.
%
%       HANDLES: structure with the following fields:
%           FIGURE: handle to the figure window.
%           SUBPLOT: nested structure with the following fields:
%               BVA: nested structure with the following fields:
%                   AXES: handles to the 2D Histogram axes (subplot).
%           SUBPLOT: nested structure with the following fields:
%               HISTOGRAM: nested structure with the following fields:
%                   MEAN: nested structure with the following fields:
%                      AXES: handle to the axes into which the histogram
%                         will be plotted.
%                   STDEV: nested structure with the following fields:
%                      AXES: handle to the axes into which the histogram
%                         will be plotted.
%
%       
%
%   OUTPUTS:
%       DATA: input structure with the following added data streams:
%           HISTOGRAMS: nested structure with the following fields:
%               COUNTS: the counts per bin for the 2D histogram.
%               EDGES: the edges used to define the histogram bins.
%               BINCENTERS: the locations of the center of each bin.
%               SMOOTHED: the histogram data after application of a
%                  smoothing filter.
%
%       HANDLES: input structure with the following added fields:
%           PLOTS: nested structure with the following fields:
%               CONTOUR: handle to the counter plot created from the 2D
%                   histogram
%               SHOTNOISEPREDICTION: handle to the shot noise prediction
%                  based on the number of photons specified in WINDOW.
%               CONFIDENCEINTERVAL: nested structure with the following
%                  fields:
%                   UPPER: handle to the upper confidence interval
%                      generated via a Monte Carlo simulation. Cluster STD
%                      values above this limit are indicative of dynamics.
%                   MEAN: handle to the average of upper and lower
%                      confidence bounds. This should correspond to the
%                      SHOTNOISEPREDICTION curve.
%               STATIC: STD clusters which fall below the upper confidence
%                  interval are considered 'static'. This is the handle to
%                  these data points.
%               DYNAMICS: STD clusters which are above the upper confidence
%                  interval are considered 'dynamic'. This is the handle to
%                  these data points.
%               UNKNOWN: STD clusters which fall below the lower confidence
%                  interval are categorized as 'unknown'. The causes of this
%                  behavior are not well understood.
%           SUBPLOT: nested structure with the following fields:
%               HISTOGRAM: nested structure with the following fields:
%                   MEAN: nested structure with the following fields:
%                       PLOTS: nested structure with the following fields:
%                           BAR: handle to the Mean bar graph data.
%                   STDEV: nested structure with the following fields:
%                       PLOTS: nested structure with the following fields:
%                           BAR: handles to the StDev bar graph data.
%           COLORBAR: handle to the colobar corresponding to the 2D
%              histogram data.
%               
%        
%
%   DEPENDENCIES:
%       SMOOTHN.M 
%       HISTCN.M
%
%   -----------------------
%   EXAMPLE USAGE:
%       [DATA, handles] = PlotResults(DATA, WINDOW, handles);
%
%   ------------------------
%   History: 
%       [1] Kristofer Gryte. University of Oxford (2011).
%
%   Copyright (c) 2011. Kristofer Gryte. University of Oxford.
%
%   
%
%   Version: 1.0 (2011-08-02)
%
%   ----------------------
%   Author Information:
%       Kristofer Gryte
%       Clarendon Laboratory
%       University of Oxford
%       Oxford, United Kingdom
%       e-mail: k.gryte1 (at) physics.ox.ac.uk
%
%   ------------------------
%   TODO:
%       [1] Allow axes configurations to be an input structure.
%       [2] Provide checks on input arguments.
%       [3] Figure out why 'histcn' appears to reset the path(s).
%
%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% EOP


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% StartUp/CleanUp:

StartUp();

C = onCleanup(@() CleanUp());


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Initialization:

% --- %
% Check!!!
if nargin ~= 3
    % Throw an error:
    errordlg(['ERROR:not enough input arguments. Please provide the following ',...
        'input arguments: DATA, WINDOW, HANDLES. See the HELP for the more ',...
        'information.'],...
        'ERROR:not enough input arguments');
    return;
end % end IF

% --- %
% Default Configurations:

Config.Histogram2D.Smoothing = 20; % Smoothing parameter

Config.ShotNoise.Prediction.OrdinateVals = 0:0.01:1; % Efficiency sampling....
Config.ShotNoise.Prediction.StDev = sqrt(...
    (Config.ShotNoise.Prediction.OrdinateVals .* (1-Config.ShotNoise.Prediction.OrdinateVals))...
    /...
    WINDOW);

Config.Axes.XLabel.FontSize = 14;
Config.Axes.XLabel.String = 'Mean';

Config.Axes.YLabel.FontSize = 14;
Config.Axes.YLabel.String = 'StDev';

Config.Axes.Title.FontSize = 14;
Config.Axes.Title.String = 'Burst Variance Analysis (Efficiency)';

Config.Axes.TickDir = 'out';
Config.Axes.Box = 'off';

Config.Figure.BackgroundColor = 'w';
    
Config.Legend.Box = 'off';
Config.Legend.Location = 'south';


Config.Histogram.Mean.Axes.YLabel.FontSize = 14;
Config.Histogram.Mean.Axes.YLabel.String = 'Counts';

Config.Histogram.Mean.Axes.Box = 'off';
Config.Histogram.Mean.Axes.TickDir = 'out';


Config.Histogram.StDev.Axes.XLabel.FontSize = 14;
Config.Histogram.StDev.Axes.XLabel.String = 'Counts';

Config.Histogram.StDev.Axes.Box = 'off';
Config.Histogram.StDev.Axes.TickDir = 'out';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% ---------- %
%% Plot:

% Activate our figure:
figure(handles.figure);

% Activate our BVA Axes:
subplot(handles.Subplot.BVA.Axes);

% Get the histogram counts: (NOTE: default is 100 Bins)
[DATA.Histogram.Counts, DATA.Histogram.Edges, DATA.Histogram.BinCenters] = histcn(...
    DATA.Results);

StartUp(); %%% NOTE!!! For some reason, 'histc'/'histcn' appears to reset the path(s)

% 'Smooth' the histogram:
DATA.Histogram.Smoothed = smoothn(...
    DATA.Histogram.Counts,...
    Config.Histogram2D.Smoothing); 

% ------------ %
% [1] Create the contour plot of the burst standard deviations:
[ContourMatrix, handles.Plots.Contour] = contourf(...
    DATA.Histogram.BinCenters{1},...
    DATA.Histogram.BinCenters{2},...
    DATA.Histogram.Smoothed(:,:,1)',...
    10,...
    'EdgeColor','none',...
    'tag', 'Per Burst StDev');

hold(handles.Subplot.BVA.Axes, 'on');

% ------------ %
% [2] Display the shot noise prediction:
handles.Plots.ShotNoisePrediction = plot(...
    Config.ShotNoise.Prediction.OrdinateVals,...
    Config.ShotNoise.Prediction.StDev,...
    'k-',...
    'LineWidth', 3.0,...
    'tag', 'Shot Noise Prediction');

% ---------------------- %
% [3] Plot the confidence bounds:
handles.Plots.ConfidenceInterval.Upper = plot(...
    DATA.Clusters.Centers,...
    DATA.ConfidenceInterval.Upper,...
    'm-.',...
    'LineWidth', 2.5,...
    'tag', 'Upper CI');

handles.Plots.ConfidenceInterval.Mean = plot(...
    DATA.Clusters.Centers(:, 1),...
    DATA.Clusters.StDevDistrMean(:, 1),...
    'y--',...
    'LineWidth', 2.0,...
    'MarkerSize', 10,...
    'tag', 'Mean MC Prediction');

% --------------------- %
% [4] Determine where the clustered populations reside relative to the
% confidence bounds:
LogID = (DATA.Clusters.Statistics(:,2) <= DATA.ConfidenceInterval.Upper...
    |...
    DATA.Clusters.Statistics(:,2) >= DATA.ConfidenceInterval.Lower);

handles.Plots.Static = plot(...
    DATA.Clusters.Centers(LogID, 1),...
    DATA.Clusters.Statistics(LogID, 2),...
    'k^',...
    'LineWidth', 1.5,...
    'MarkerFaceColor','k',...
    'MarkerSize', 8,...
    'tag', 'Static');


LogID = (DATA.Clusters.Statistics(:,2) > DATA.ConfidenceInterval.Upper);
handles.Plots.Dynamics = plot(...
    DATA.Clusters.Centers(LogID, 1),...
    DATA.Clusters.Statistics(LogID, 2),...
    'k^',...
    'LineWidth', 1.5,...
    'MarkerFaceColor','r',...
    'MarkerSize', 8,...
    'tag', 'Dynamics');

LogID = (DATA.Clusters.Statistics(:,2) < DATA.ConfidenceInterval.Lower);
handles.Plots.Unknown = plot(...
    DATA.Clusters.Centers(LogID, 1),...
    DATA.Clusters.Statistics(LogID, 2),...
    'k^',...
    'LineWidth', 1.5,...
    'MarkerFaceColor','g',...
    'MarkerSize', 8,...
    'tag', 'Unknown');



hold(handles.Subplot.BVA.Axes, 'off');

% --------------------- %
% [6] Compute Histograms:

DATA.Histogram.Edges{1,1} = -0.025 : 0.05 : 1.025; % Comment out to retain 3D hist edges

Counts1 = histc(DATA.Results(:,1),...
    DATA.Histogram.Edges{1,1});

handles.Subplot.Histogram.Mean.Plots.Bar =...
    bar(handles.Subplot.Histogram.Mean.Axes,...
        DATA.Histogram.Edges{1,1}, Counts1, 'histc');

Counts2 = histc(DATA.Results(:,2),...
    DATA.Histogram.Edges{1,2});

handles.Subplot.Histogram.StDev.Plots.Bar =...
    barh(handles.Subplot.Histogram.StDev.Axes,...
        DATA.Histogram.Edges{1,2}, Counts2, 'histc');

% --------------------- %
%% Adjust Axes:

% BVA:
xlim(handles.Subplot.BVA.Axes,...
    [min(Config.ShotNoise.Prediction.OrdinateVals),...
    max(Config.ShotNoise.Prediction.OrdinateVals)]);

ylim(handles.Subplot.BVA.Axes,...
    [0, max(DATA.Results(:,2))]);

set(handles.figure,...
    'color', Config.Figure.BackgroundColor)

ylabel(handles.Subplot.BVA.Axes,...
    Config.Axes.YLabel.String,...
    'FontSize', Config.Axes.YLabel.FontSize);

xlabel(handles.Subplot.BVA.Axes,...
    Config.Axes.XLabel.String,...
    'FontSize', Config.Axes.XLabel.FontSize)

title(handles.Subplot.BVA.Axes,...
    Config.Axes.Title.String,...
    'FontSize', Config.Axes.Title.FontSize);

set(handles.Subplot.BVA.Axes,...
    'TickDir', Config.Axes.TickDir,...
    'Box', Config.Axes.Box);


% Histograms:
xlim(handles.Subplot.Histogram.Mean.Axes,...
    [min(Config.ShotNoise.Prediction.OrdinateVals),...
    max(Config.ShotNoise.Prediction.OrdinateVals)]);

ylabel(handles.Subplot.Histogram.Mean.Axes,...
    Config.Histogram.Mean.Axes.YLabel.String,...
    'FontSize', Config.Histogram.Mean.Axes.YLabel.FontSize);

set(handles.Subplot.Histogram.Mean.Axes,...
    'Box', Config.Histogram.Mean.Axes.Box,...
    'TickDir', Config.Histogram.Mean.Axes.TickDir);


ylim(handles.Subplot.Histogram.StDev.Axes,...
    [0, max(DATA.Results(:,2))]);

xlabel(handles.Subplot.Histogram.StDev.Axes,...
    Config.Histogram.StDev.Axes.XLabel.String,...
    'FontSize', Config.Histogram.StDev.Axes.XLabel.FontSize);

set(handles.Subplot.Histogram.StDev.Axes,...
    'Box', Config.Histogram.StDev.Axes.Box,...
    'TickDir', Config.Histogram.StDev.Axes.TickDir);


% ----------------------- %
% Create a colorbar:

APOS = get(handles.Subplot.BVA.Axes, 'position');

handles.Colorbar = colorbar('peer', handles.Subplot.BVA.Axes);

CPOS = get(handles.Colorbar, 'position');

set(handles.Colorbar,...
    'Position', [APOS(1)+APOS(3)+0.01, CPOS(2), CPOS(3), CPOS(4)]);

% ----------------------- %
% Configure the Legend:
% handles.Plots.Current = [handles.Plots.Contour, handles.Plots.ShotNoisePrediction,...
%     handles.Plots.ConfidenceInterval.Upper, handles.Plots.ConfidenceInterval.Lower,...
%     handles.Plots.ConfidenceInterval.Mean,...
%     handles.Plots.Static, handles.Plots.Dynamics, handles.Plots.Unknown];

% handles.Legend = legend(...
%     handles.Plots.Current,...
%     get(handles.Plots.Current, 'tag'));
% 
% set(handles.Legend,...
%     'Box', DATA.BVA.Config.Legend.Box,...
%     'Location', DATA.BVA.Config.Legend.Location);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% EOF



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% StartUp:
function StartUp()
%
%
%

% Add path(s):
addpath(...
    'Other/histcn',...
    'Other/smoothn');





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% CleanUp:
function CleanUp()
%
%
%

% Remove path(s):
rmpath(...
    'Other/histcn',...
    'Other/smoothn');


